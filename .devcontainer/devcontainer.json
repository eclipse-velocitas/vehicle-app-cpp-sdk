// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.0/containers/cpp
{
	"name": "Vehicle App C++ SDK",
	"build": {
		"dockerfile": "Dockerfile"
	},
	"runArgs": [
		"--init",
		"--privileged",
		"--cap-add=SYS_PTRACE",
		"--security-opt",
		"seccomp=unconfined"
	],
	"containerEnv": {
		"GITHUB_API_TOKEN": "${localEnv:GITHUB_API_TOKEN}"
	},
	"customizations": {
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"[cpp]": {
					"editor.defaultFormatter": "xaver.clang-format"
				},
				"editor.formatOnSave": true,
				"json.format.keepLines": true,
				"cmake.configureOnEdit": false,
				"cmake.configureOnOpen": false,
				"clang-tidy.fixOnSave": true,
				"clang-tidy.lintOnSave": true,
				"clang-tidy.blacklist": [
					"app/tests/*",
					"app/vehicle_model/*",
					"build/*"
				],
				"clang-tidy.buildPath": "./build",
				"clang-tidy.compilerArgs": [
					"-std=c++17"
				],
				"terminal.integrated.defaultProfile.linux": "zsh",
				"terminal.integrated.profiles.linux": {
					"zsh": {
						"path": "/usr/bin/zsh"
					}
				},
				"vsmqtt.brokerProfiles": [
					{
						"name": "mosquitto (local)",
						"host": "localhost",
						"port": 1883,
						"clientId": "vsmqtt_client"
					},
					{
						"name": "mosquitto (k3d)",
						"host": "localhost",
						"port": 31883,
						"clientId": "vsmqtt_client"
					},
					{
						"name": "mosquitto (kanto)",
						"host": "localhost",
						"port": 1883,
						"clientId": "vsmqtt_client"
					}
				],
				"files.associations": {
					"array": "cpp",
					"atomic": "cpp",
					"bit": "cpp",
					"*.tcc": "cpp",
					"cctype": "cpp",
					"chrono": "cpp",
					"clocale": "cpp",
					"cmath": "cpp",
					"compare": "cpp",
					"concepts": "cpp",
					"condition_variable": "cpp",
					"csignal": "cpp",
					"cstdint": "cpp",
					"cstdio": "cpp",
					"cstdlib": "cpp",
					"cstring": "cpp",
					"ctime": "cpp",
					"cwchar": "cpp",
					"cwctype": "cpp",
					"deque": "cpp",
					"list": "cpp",
					"map": "cpp",
					"unordered_map": "cpp",
					"vector": "cpp",
					"exception": "cpp",
					"functional": "cpp",
					"initializer_list": "cpp",
					"iosfwd": "cpp",
					"iostream": "cpp",
					"istream": "cpp",
					"limits": "cpp",
					"memory": "cpp",
					"mutex": "cpp",
					"new": "cpp",
					"numbers": "cpp",
					"ostream": "cpp",
					"ratio": "cpp",
					"semaphore": "cpp",
					"stdexcept": "cpp",
					"stop_token": "cpp",
					"streambuf": "cpp",
					"string": "cpp",
					"string_view": "cpp",
					"system_error": "cpp",
					"thread": "cpp",
					"tuple": "cpp",
					"type_traits": "cpp",
					"typeinfo": "cpp",
					"utility": "cpp",
					"any": "cpp",
					"bitset": "cpp",
					"cinttypes": "cpp",
					"codecvt": "cpp",
					"cstdarg": "cpp",
					"cstddef": "cpp",
					"forward_list": "cpp",
					"set": "cpp",
					"unordered_set": "cpp",
					"algorithm": "cpp",
					"iterator": "cpp",
					"memory_resource": "cpp",
					"numeric": "cpp",
					"optional": "cpp",
					"random": "cpp",
					"fstream": "cpp",
					"future": "cpp",
					"iomanip": "cpp",
					"ranges": "cpp",
					"sstream": "cpp",
					"valarray": "cpp",
					"variant": "cpp",
					"*.inc": "cpp",
					"regex": "cpp",
					"shared_mutex": "cpp",
					"hash_map": "cpp",
					"cfenv": "cpp",
					"complex": "cpp",
					"scoped_allocator": "cpp",
					"typeindex": "cpp"
				}
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-vscode.cpptools",
				"ms-vscode.cmake-tools",
				"ms-azuretools.vscode-dapr",
				"rpdswtk.vsmqtt",
				"ms-kubernetes-tools.vscode-kubernetes-tools",
				"bierner.markdown-mermaid",
				"cschlosser.doxdocgen",
				"xaver.clang-format",
				"cs128.cs128-clang-tidy",
				"matepek.vscode-catch2-test-adapter",
				"sanaajani.taskrunnercode",
				"augustocdias.tasks-shell-input"
			]
		}
	},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Use 'onCreateCommand' to run commands when the container is created.
	"onCreateCommand": "bash .devcontainer/scripts/post-create.sh",
	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}
